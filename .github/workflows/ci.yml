
name: ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ts:
    name: TypeScript build & test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          version: 9
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '20'
      - run: pnpm -w install --frozen-lockfile
      - run: pnpm -r --filter "./packages/tf-lang-l0-ts" test

  rust:
    name: Rust build & test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Install Rust
        run: |
          sudo apt-get update
          sudo apt-get install -y curl build-essential pkg-config libssl-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "${HOME}/.cargo/bin" >> $GITHUB_PATH
      - run: $HOME/.cargo/bin/cargo build --manifest-path crates/Cargo.toml --workspace --all-targets --verbose
      - run: $HOME/.cargo/bin/cargo test --manifest-path crates/Cargo.toml --workspace --all-targets --verbose

  tf-spec:
    name: tf-spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          version: 9
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '20'
      - run: pnpm -w install --frozen-lockfile
      - run: ./scripts/validate-tf-spec
      - run: cp tf-spec/validation.txt tf-spec/validation-run1.txt
      - run: ./scripts/validate-tf-spec
      - run: diff tf-spec/validation-run1.txt tf-spec/validation.txt
      - uses: actions/upload-artifact@v4
        with:
          name: tf-spec
          path: tf-spec/validation.txt
      - name: Install Rust
        run: |
          sudo apt-get update
          sudo apt-get install -y curl build-essential pkg-config libssl-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "${HOME}/.cargo/bin" >> $GITHUB_PATH
      - run: pnpm -w --filter "./packages/tf-lang-l0-ts" exec vitest run tests/spec.adapter.test.ts
      - run: pnpm -w --filter "./packages/tf-lang-l0-ts" exec vitest run tests/spec.adapter.test.ts
      - run: $HOME/.cargo/bin/cargo test --manifest-path packages/tf-lang-l0-rs/Cargo.toml spec_adapter
      - run: $HOME/.cargo/bin/cargo test --manifest-path packages/tf-lang-l0-rs/Cargo.toml spec_adapter

  oracle-core:
    name: oracle-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          version: 9
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '20'
      - run: pnpm i --frozen-lockfile=false
      - run: pnpm -C packages/oracles-core-ts build
      - run: pnpm -C packages/oracles-core-ts test
      - run: ./scripts/oracle-core-results
      - run: cp oracle-core/results.json oracle-core/results.run1.json
      - run: ./scripts/oracle-core-results
      - run: diff oracle-core/results.run1.json oracle-core/results.json
      - uses: actions/upload-artifact@v4
        with:
          name: oracle-core
          path: |
            oracle-core/results.json
            oracle-core/results.md

  image:
    name: Container image
    runs-on: ubuntu-latest
    env:
      REGISTRY: ghcr.io
      REPO_RAW: ${{ github.repository }}
      SOURCE_DATE_EPOCH: 0
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - name: Compute lowercase repository
        id: repo
        shell: bash
        env:
          REPO_RAW: ${{ env.REPO_RAW }}
        run: |
          echo "repo_lc=${REPO_RAW,,}" >> "$GITHUB_OUTPUT"
      - name: Login to GHCR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        id: build
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        with:
          context: .
          file: services/claims-api-ts/Dockerfile
          target: runtime
          platforms: linux/amd64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ${{ env.REGISTRY }}/${{ steps.repo.outputs.repo_lc }}/claims-api-ts:0.2
            ${{ env.REGISTRY }}/${{ steps.repo.outputs.repo_lc }}/claims-api-ts:latest
          sbom: false
          provenance: false
      - name: Rebuild to verify digest
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        id: rebuild
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        with:
          context: .
          file: services/claims-api-ts/Dockerfile
          target: runtime
          platforms: linux/amd64
          push: false
          sbom: false
          provenance: false
          no-cache: true
          outputs: type=digest
      - name: Compare digests
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: test "${{ steps.build.outputs.digest }}" = "${{ steps.rebuild.outputs.digest }}"
      - name: Summarize digests
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          {
            echo "build digest:  ${{ steps.build.outputs.digest }}"
            echo "rebuild digest:${{ steps.rebuild.outputs.digest }}"
            if [ "$GITHUB_EVENT_NAME" = 'push' ] && [ "$GITHUB_REF" = 'refs/heads/main' ]; then
              echo "pushed:"
              echo "  ${{ env.REGISTRY }}/${{ steps.repo.outputs.repo_lc }}/claims-api-ts:0.2@${{ steps.build.outputs.digest }}"
              echo "  ${{ env.REGISTRY }}/${{ steps.repo.outputs.repo_lc }}/claims-api-ts:latest@${{ steps.build.outputs.digest }}"
            fi
          } >> $GITHUB_STEP_SUMMARY
      - name: Check JSON fixtures
        run: pnpm run -w check:fixtures
