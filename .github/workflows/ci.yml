
name: ci

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  ts:
    name: TypeScript build & test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          version: 9
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm --filter "./packages/tf-lang-l0-ts" test

  rust:
    name: Rust build & test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@3cf1046959f7ce90f2bbb139f49b41fc1acbfd4a # v2
        with:
          workspaces: crates -> crates/target
          cache-on-failure: true
      - run: cargo build --manifest-path crates/Cargo.toml --workspace --all-targets --verbose
      - run: cargo test --manifest-path crates/Cargo.toml --workspace --all-targets --verbose

  tf-spec:
    name: tf-spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          version: 9
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: ./scripts/validate-tf-spec
      - run: sha256sum tf-spec/validation.txt > tf-spec/validation.sha
      - run: ./scripts/validate-tf-spec
      - run: sha256sum --check tf-spec/validation.sha
      - uses: actions/upload-artifact@v4
        with:
          name: tf-spec
          path: tf-spec/validation.txt
      - name: Install system dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential pkg-config libssl-dev
      - uses: dtolnay/rust-toolchain@e97e2d8cc328f1b50210efc529dca0028893a2d9 # v1
        with:
          toolchain: stable
      - uses: Swatinem/rust-cache@3cf1046959f7ce90f2bbb139f49b41fc1acbfd4a # v2
        with:
          workspaces: |
            crates -> crates/target
            packages/tf-lang-l0-rs -> packages/tf-lang-l0-rs/target
          cache-on-failure: true
      - run: pnpm --filter "./packages/tf-lang-l0-ts" run test -- tests/spec.adapter.test.ts
      - run: pnpm --filter "./packages/tf-lang-l0-ts" run test -- tests/spec.adapter.test.ts
      - run: cargo test --manifest-path packages/tf-lang-l0-rs/Cargo.toml spec_adapter
      - run: cargo test --manifest-path packages/tf-lang-l0-rs/Cargo.toml spec_adapter

  oracle-core:
    name: oracle-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: pnpm/action-setup@a7487c7e89a18df4991f7f222e4898a00d66ddda # v4
        with:
          version: 9
      - uses: actions/setup-node@49933ea5288caeca8642d1e84afbd3f7d6820020 # v4
        with:
          node-version: '20'
          cache: 'pnpm'
      - run: pnpm install --frozen-lockfile
      - run: pnpm -C packages/oracles-core-ts build
      - run: pnpm -C packages/oracles-core-ts test
      - run: bash ./scripts/oracle-core-results
      - run: sha256sum oracle-core/results.json oracle-core/results.md > oracle-core/results.sha
      - run: bash ./scripts/oracle-core-results
      - run: sha256sum --check oracle-core/results.sha
      - uses: actions/upload-artifact@v4
        with:
          name: oracle-core
          path: |
            oracle-core/results.json
            oracle-core/results.md

  container-image:
    name: Container image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository_owner == 'LexLattice'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08eba0b27e820071cde6df949e0beb9ba4906955 # v4
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - name: Log in to GHCR
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        with:
          context: .
          file: services/claims-api-ts/Dockerfile
          push: true
          tags: |
            ghcr.io/lexlattice/tf-lang/claims-api-ts:0.2
            ghcr.io/lexlattice/tf-lang/claims-api-ts:${{ github.sha }}
