name: ci

on:
  push:
    branches: [ main ]
  pull_request:

permissions:
  contents: read
  packages: write

jobs:
  core:
    name: ${{ matrix.target }} checks
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [ts, rust]
    steps:
      - uses: actions/checkout@v4

      - name: Setup pnpm
        if: matrix.target == 'ts'
        uses: ./.github/actions/setup-pnpm
        with:
          node-version: '20'
          install: 'true'
          frozen: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'merge_group' }}

      - name: Install Rust toolchain
        if: matrix.target == 'rust'
        uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        if: matrix.target == 'rust'
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            crates/target
          key: ${{ runner.os }}-cargo-${{ hashFiles('crates/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: pnpm tests
        if: matrix.target == 'ts'
        run: pnpm --filter ./packages/tf-lang-l0-ts run test

      - name: cargo build & test
        if: matrix.target == 'rust'
        run: |
          cargo build --manifest-path crates/Cargo.toml --workspace --all-targets --locked --verbose
          cargo test --manifest-path crates/Cargo.toml --workspace --all-targets --locked --verbose

  tf-spec:
    name: tf-spec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-pnpm
        with:
          node-version: '20'
          install: 'true'
          frozen: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'merge_group' }}
          cache-dependency-path: |
            pnpm-lock.yaml
            packages/tf-lang-l0-ts/pnpm-lock.yaml

      - name: Build tf-lang-l0-ts
        run: pnpm -C packages/tf-lang-l0-ts build

      - name: Pack tf-lang-l0 (subpackage)
        id: pack_l0
        shell: bash
        working-directory: packages/tf-lang-l0-ts
        run: |
          set -euo pipefail
          FILE="$(pnpm pack --silent | tail -n1)"
          [ -n "$FILE" ] || { echo "pnpm pack produced no filename" >&2; exit 1; }
          ABS="$PWD/$FILE"
          echo "tarball=$ABS" >> "$GITHUB_OUTPUT"
          echo "Packed tarball: $ABS"

      - name: Export tarball path
        shell: bash
        run: printf 'TF_L0_TGZ=%s\n' '${{ steps.pack_l0.outputs.tarball }}' >> "$GITHUB_ENV"

      - run: ./scripts/validate-tf-spec
      - name: Replay validation determinism
        run: |
          cp tf-spec/validation.txt tf-spec/validation.run1.txt
          ./scripts/validate-tf-spec
          diff tf-spec/validation.run1.txt tf-spec/validation.txt

      - uses: actions/upload-artifact@v4
        if: ${{ !env.ACT }}
        with:
          name: tf-spec
          path: tf-spec/validation.txt

      - uses: dtolnay/rust-toolchain@stable
      - name: Adapter spec parity (TS)
        run: pnpm --filter ./packages/tf-lang-l0-ts run test -- tests/spec.adapter.test.ts
      - name: Adapter spec parity (Rust)
        run: cargo test --manifest-path packages/tf-lang-l0-rs/Cargo.toml spec_adapter

  oracle-core:
    name: oracle-core
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-pnpm
        with:
          node-version: '20'
          install: 'true'
          frozen: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'merge_group' }}
      - run: pnpm -C packages/oracles-core-ts build
      - run: pnpm -C packages/oracles-core-ts test
      - name: Deterministic report
        run: |
          ./scripts/oracle-core-results
          cp oracle-core/results.json oracle-core/results.run1.json
          ./scripts/oracle-core-results
          diff oracle-core/results.run1.json oracle-core/results.json
      - uses: actions/upload-artifact@v4
        if: ${{ !env.ACT }}
        with:
          name: oracle-core
          path: |
            oracle-core/results.json
            oracle-core/results.md

  traces:
    name: trace validator
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/setup-pnpm
        with:
          node-version: '20'
          install: 'true'
          frozen: ${{ (github.event_name == 'push' && github.ref == 'refs/heads/main') || github.event_name == 'merge_group' }}
      - run: node scripts/validate-trace.mjs < tests/fixtures/trace-sample.jsonl

  container-image:
    name: Container image
    if: github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository_owner == 'LexLattice'
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@e468171a9de216ec08956ac3ada2f0791b6bd435 # v3
      - name: Log in to GHCR
        uses: docker/login-action@184bdaa0721073962dff0199f1fb9940f07167d1 # v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build & push image
        uses: docker/build-push-action@ca052bb54ab0790a636c9b5f226502c73d547a25 # v5
        with:
          context: .
          file: services/claims-api-ts/Dockerfile
          push: true
          tags: |
            ghcr.io/lexlattice/tf-lang/claims-api-ts:0.2
            ghcr.io/lexlattice/tf-lang/claims-api-ts:${{ github.sha }}
