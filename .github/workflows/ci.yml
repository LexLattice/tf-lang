
name: ci

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  ts:
    name: TypeScript build & test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/tf-lang-l0-ts
    steps:
      - uses: actions/checkout@v4
      - uses: pnpm/action-setup@v4
        with:
          version: 9
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: pnpm i --frozen-lockfile=false
      - run: pnpm test

  rust:
    name: Rust build & test
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: packages/tf-lang-l0-rs
    steps:
      - uses: actions/checkout@v4
      - name: Install Rust
        run: |
          sudo apt-get update
          sudo apt-get install -y curl build-essential pkg-config libssl-dev
          curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
          echo "${HOME}/.cargo/bin" >> $GITHUB_PATH
      - run: $HOME/.cargo/bin/cargo build --verbose
      - run: $HOME/.cargo/bin/cargo test --verbose

  image:
    name: Container image
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: docker/setup-buildx-action@v3
      - name: Login to GHCR
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build image
        id: build
        uses: docker/build-push-action@v5
        with:
          context: .
          file: services/claims-api-ts/Dockerfile
          target: runtime
          platforms: linux/amd64
          push: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' }}
          tags: |
            ghcr.io/${{ github.repository }}/claims-api-ts:0.2
            ghcr.io/${{ github.repository }}/claims-api-ts:latest
          sbom: false
          provenance: false
      - name: Rebuild to verify digest
        id: rebuild
        uses: docker/build-push-action@v5
        with:
          context: .
          file: services/claims-api-ts/Dockerfile
          target: runtime
          platforms: linux/amd64
          push: false
          sbom: false
          provenance: false
          no-cache: true
          outputs: type=digest
      - name: Compare digests
        run: test "${{ steps.build.outputs.digest }}" = "${{ steps.rebuild.outputs.digest }}"
      - name: Record digest
        run: echo "${{ steps.build.outputs.digest }}" | tee -a $GITHUB_STEP_SUMMARY
