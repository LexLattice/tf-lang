{
  "pipeline_id": "auto.fnol.fasttrack.v1",
  "created_at": "2025-09-30T20:43:20.338Z",
  "effects": "Outbound+Inbound+Entropy+Pure",
  "nodes": [
    {
      "id": "S_receive",
      "kind": "Subscribe",
      "channel": "rpc:req:api/fnol/submit",
      "qos": "at_least_once",
      "out": { "var": "receive" },
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_validate_fnol",
      "kind": "Transform",
      "spec": { "op": "jsonschema.validate", "schema": "FnolV1" },
      "in": { "value": "@receive.body" },
      "out": { "var": "validate_fnol" },
      "runtime": { "instance": "@Memory", "domain": "transform" }
    },
    {
      "id": "K_get_policy_identity",
      "kind": "Keypair",
      "algorithm": "Ed25519",
      "out": { "var": "get_policy_identity" },
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_get_policy_corr",
      "kind": "Transform",
      "spec": { "op": "hash", "alg": "blake3" },
      "in": {
        "k": "@get_policy_identity.public_key_pem",
        "e": "api/policy/snapshot",
        "m": "GET",
        "query": { "policy_id": "@receive.body.policy_id" }
      },
      "out": { "var": "get_policy_corr" },
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_get_policy_reply_to",
      "kind": "Transform",
      "spec": { "op": "concat" },
      "in": [ "rpc:reply:", "@get_policy_corr" ],
      "out": { "var": "get_policy_reply_to" },
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "P_get_policy",
      "kind": "Publish",
      "channel": "rpc:req:api/policy/snapshot",
      "qos": "at_least_once",
      "payload": {
        "method": "GET",
        "corr": "@get_policy_corr",
        "reply_to": "@get_policy_reply_to",
        "query": { "policy_id": "@receive.body.policy_id" }
      },
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "S_get_policy",
      "kind": "Subscribe",
      "channel": "@get_policy_reply_to",
      "qos": "at_least_once",
      "filter": "@get_policy_corr",
      "out": { "var": "get_policy" },
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_score_severity",
      "kind": "Transform",
      "spec": { "op": "model_infer", "model": "auto.severity.v3" },
      "in": { "features": "@receive.body" },
      "out": { "var": "score_severity" },
      "runtime": { "instance": "@Memory", "domain": "transform" }
    },
    {
      "id": "T_score_fraud",
      "kind": "Transform",
      "spec": { "op": "model_infer", "model": "fraud.v7" },
      "in": { "features": "@receive.body" },
      "out": { "var": "score_fraud" },
      "runtime": { "instance": "@Memory", "domain": "transform" }
    },
    {
      "id": "T_eligibility",
      "kind": "Transform",
      "spec": { "op": "policy_eval", "policy": "fasttrack.policy.v1" },
      "in": {
        "input": {
          "severity": "@score_severity",
          "fraud": "@score_fraud",
          "policy": "@get_policy.response"
        }
      },
      "out": { "var": "eligibility" },
      "runtime": { "instance": "@Memory", "domain": "policy" }
    },
    {
      "id": "K_consent_identity",
      "kind": "Keypair",
      "algorithm": "Ed25519",
      "out": { "var": "consent_identity" },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_consent_corr",
      "kind": "Transform",
      "spec": { "op": "hash", "alg": "blake3" },
      "in": {
        "k": "@consent_identity.public_key_pem",
        "e": "api/consent/sign",
        "m": "POST",
        "body": { "doc": "fasttrack.pdf", "claimant": "@receive.body.party" }
      },
      "out": { "var": "consent_corr" },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_consent_reply_to",
      "kind": "Transform",
      "spec": { "op": "concat" },
      "in": [ "rpc:reply:", "@consent_corr" ],
      "out": { "var": "consent_reply_to" },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "P_consent_request",
      "kind": "Publish",
      "channel": "rpc:req:api/consent/sign",
      "qos": "at_least_once",
      "payload": {
        "method": "POST",
        "corr": "@consent_corr",
        "reply_to": "@consent_reply_to",
        "body": { "doc": "fasttrack.pdf", "claimant": "@receive.body.party" }
      },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "S_consent_reply",
      "kind": "Subscribe",
      "channel": "@consent_reply_to",
      "qos": "at_least_once",
      "filter": "@consent_corr",
      "out": { "var": "consent" },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "K_payout_identity",
      "kind": "Keypair",
      "algorithm": "Ed25519",
      "out": { "var": "payout_identity" },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_payout_corr",
      "kind": "Transform",
      "spec": { "op": "hash", "alg": "blake3" },
      "in": {
        "k": "@payout_identity.public_key_pem",
        "e": "api/payments/payout",
        "m": "POST",
        "body": {
          "claim": "@receive.body.claim_id",
          "amount": "@eligibility.amount",
          "channel": "SEPA"
        }
      },
      "out": { "var": "payout_corr" },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_payout_reply_to",
      "kind": "Transform",
      "spec": { "op": "concat" },
      "in": [ "rpc:reply:", "@payout_corr" ],
      "out": { "var": "payout_reply_to" },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "P_payout_request",
      "kind": "Publish",
      "channel": "rpc:req:api/payments/payout",
      "qos": "at_least_once",
      "payload": {
        "method": "POST",
        "corr": "@payout_corr",
        "reply_to": "@payout_reply_to",
        "body": {
          "claim": "@receive.body.claim_id",
          "amount": "@eligibility.amount",
          "channel": "SEPA"
        }
      },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "S_payout_reply",
      "kind": "Subscribe",
      "channel": "@payout_reply_to",
      "qos": "at_least_once",
      "filter": "@payout_corr",
      "out": { "var": "payout" },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "P_emit_metric",
      "kind": "Publish",
      "channel": "metric:claims.fasttrack.success",
      "qos": "at_least_once",
      "payload": {
        "value": 1,
        "unit": "count",
        "tags": { "region": "@get_policy.response.region" }
      },
      "when": "@eligibility.decision == 'allow'",
      "runtime": { "instance": "@Memory", "domain": "obs" }
    },
    {
      "id": "K_assign_identity",
      "kind": "Keypair",
      "algorithm": "Ed25519",
      "out": { "var": "assign_identity" },
      "when": "!(@eligibility.decision == 'allow')",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_assign_corr",
      "kind": "Transform",
      "spec": { "op": "hash", "alg": "blake3" },
      "in": {
        "k": "@assign_identity.public_key_pem",
        "e": "api/adjuster/assign",
        "m": "POST",
        "body": {
          "claim": "@receive.body.claim_id",
          "priority": "@score_severity.bucket"
        }
      },
      "out": { "var": "assign_corr" },
      "when": "!(@eligibility.decision == 'allow')",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_assign_reply_to",
      "kind": "Transform",
      "spec": { "op": "concat" },
      "in": [ "rpc:reply:", "@assign_corr" ],
      "out": { "var": "assign_reply_to" },
      "when": "!(@eligibility.decision == 'allow')",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "P_assign_request",
      "kind": "Publish",
      "channel": "rpc:req:api/adjuster/assign",
      "qos": "at_least_once",
      "payload": {
        "method": "POST",
        "corr": "@assign_corr",
        "reply_to": "@assign_reply_to",
        "body": {
          "claim": "@receive.body.claim_id",
          "priority": "@score_severity.bucket"
        }
      },
      "when": "!(@eligibility.decision == 'allow')",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "S_assign_reply",
      "kind": "Subscribe",
      "channel": "@assign_reply_to",
      "qos": "at_least_once",
      "filter": "@assign_corr",
      "out": { "var": "assign" },
      "when": "!(@eligibility.decision == 'allow')",
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "P_ack",
      "kind": "Publish",
      "channel": "@receive.reply_to",
      "qos": "at_least_once",
      "payload": { "corr": "@receive.corr", "status": "accepted" },
      "runtime": { "instance": "@Memory", "domain": "interaction" }
    },
    {
      "id": "T_record_digest",
      "kind": "Transform",
      "spec": { "op": "digest", "alg": "blake3" },
      "in": {
        "kind": "fasttrack.route",
        "payload": "@eligibility",
        "ts": "2025-09-30T20:43:20.338Z"
      },
      "out": { "var": "record_digest" },
      "runtime": { "instance": "@Memory", "domain": "policy" }
    },
    {
      "id": "T_record_id",
      "kind": "Transform",
      "spec": { "op": "encode_base58" },
      "in": { "value": "@record_digest" },
      "out": { "var": "record_id" },
      "runtime": { "instance": "@Memory", "domain": "policy" }
    },
    {
      "id": "P_record",
      "kind": "Publish",
      "channel": "policy:record",
      "qos": "at_least_once",
      "payload": {
        "record_id": "@record_id",
        "kind": "fasttrack.route",
        "payload": "@eligibility",
        "ts": "2025-09-30T20:43:20.338Z"
      },
      "runtime": { "instance": "@Memory", "domain": "policy" }
    }
  ]
}
