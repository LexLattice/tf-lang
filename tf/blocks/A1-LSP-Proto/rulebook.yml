version: 1
meta: { node: A1-LSP-Proto, title: "A1 â€” LSP prototype (v3 hardened)" }

phases:
  cp1_baseline:
    title: "Scoped build + scope + hygiene (soft)"
    inherits: []
    rules:
      - scope_guard_cp1
      - install_ok_scoped
      - scaffold_exists
      - compile_ok_scoped
      - server_stdio_init
      - smoke_tf_cli
      - banned_tokens_soft

  cp2_diag:
    title: "Diagnostics via real LSP (publishDiagnostics)"
    inherits: [cp1_baseline]
    rules:
      - freeze_lockfile              # lockfile must NOT change from cp2+
      - fixtures_readonly              # freeze samples/helpers from here on
      - lsp_diag_protected_write       # requires publishDiagnostics from server
      - lsp_diag_syntax_error          # requires parse error surfaced with coords

  cp3_hover:
    title: "Hover via real LSP (signature/effects/laws)"
    inherits: [cp2_diag]
    rules:
      - lsp_hover_effects
      - banned_ts_expect_error_warn    # start warning on @ts-expect-error

  cp4_code_actions:
    title: "CodeAction wrap Authorize + hygiene (hard)"
    inherits: [cp3_hover]
    rules:
      - lsp_code_action_authorize
      - banned_tokens_hard
      - banned_ts_expect_error_hard

rules:
  # ------- CP1 (lockfile-aware)
  scope_guard_cp1:
    kind: diff_scan
    cmd: >
      cat "$DIFF_PATH" | node tools/tf-checker/scan-diff.mjs \
        --config meta/checker.yml \
        --diff - \
        --allow "pnpm-lock.yaml"
    expect: { ok: true }

  install_ok_scoped:
    kind: process
    cmd: pnpm -C packages/tf-lsp-server install --no-frozen-lockfile --prefer-offline
    expect: { code: 0 }

  scaffold_exists:
    kind: fs
    files:
      - "packages/tf-lsp-server/package.json"
      - "packages/tf-lsp-server/tsconfig.json"
      - "packages/tf-lsp-server/src/server.ts"
      - "packages/tf-lsp-server/bin/server.mjs"
      - "samples/a1/illegal_write.tf"
      - "samples/a1/protected_write.tf"
      - "samples/a1/syntax_error.tf"
      - "scripts/lsp-smoke/stdio.mjs"

  compile_ok_scoped:
    kind: process
    cmd: pnpm -C packages/tf-lsp-server run build
    expect: { code: 0 }

  server_stdio_init:
    kind: cmd
    cmd: node scripts/lsp-smoke/stdio.mjs --mode init
    expect:
      code: 0
      contains: '"capabilities"'

  smoke_tf_cli:
    kind: cmd
    cmd: node packages/tf-compose/bin/tf.mjs parse samples/a1/illegal_write.tf -o out/0.45/a1/parse.json
    expect: { code: 0 }

  banned_tokens_soft:
    kind: diff_scan
    cmd: cat "$DIFF_PATH" | node tools/tf-checker/scan-diff.mjs --config meta/checker.yml --diff -
    expect:
      ok: true
      contains: "\"token_violations\": []"

  freeze_lockfile:
    kind: diff_scan
    cmd: >
      cat "$DIFF_PATH" | node tools/tf-checker/scan-diff.mjs \
        --config meta/checker.yml \
        --diff - \
        --forbid "pnpm-lock.yaml"
    expect: { ok: true }

  # ------- CP2 (real LSP, not helper-only)
  fixtures_readonly:
    kind: cmd
    cmd: bash -lc 'test -z "$(git diff --cached --name-only -- samples/a1/** scripts/lsp-smoke/**)"'
    expect: { code: 0 }

  lsp_diag_protected_write:
    kind: cmd
    cmd: node scripts/lsp-smoke/stdio.mjs --mode diagnostics --file samples/a1/protected_write.tf
    expect:
      code: 0
      contains: '"publishDiagnostics"'
  lsp_diag_syntax_error:
    kind: cmd
    cmd: node scripts/lsp-smoke/stdio.mjs --mode diagnostics --file samples/a1/syntax_error.tf
    expect:
      code: 0
      contains: '"range":{"start":{"line":'

  # ------- CP3 (real LSP hover)
  lsp_hover_effects:
    kind: cmd
    cmd: node scripts/lsp-smoke/stdio.mjs --mode hover --file samples/a1/illegal_write.tf --symbol "tf:network/publish@1"
    expect:
      code: 0
      contains: '"effects":["Network.Out"]'

  banned_ts_expect_error_warn:
    kind: diff_scan
    cmd: cat "$DIFF_PATH" | node tools/tf-checker/scan-diff.mjs --config meta/checker.yml --diff -
    expect:
      ok: true
      contains: "\"token_violations\": []"   # we warn via checker, escalate in cp4

  # ------- CP4 (action + hard hygiene)
  lsp_code_action_authorize:
    kind: cmd
    cmd: node scripts/lsp-smoke/stdio.mjs --mode codeAction --file samples/a1/protected_write.tf
    expect:
      code: 0
      contains: "Authorize{ scope:"

  # Harden hygiene in cp4: no warnings allowed when TF_STRICT=1
  banned_tokens_hard:
    kind: diff_scan
    cmd: TF_STRICT=1 cat "$DIFF_PATH" \
         | node tools/tf-checker/scan-diff.mjs --config meta/checker.yml --diff -
    expect:
      ok: true
      contains: "\"token_warnings\": []"

  banned_ts_expect_error_hard:
    kind: diff_scan
    cmd: TF_STRICT=1 cat "$DIFF_PATH" | node tools/tf-checker/scan-diff.mjs --config meta/checker.yml --diff -
    expect:
      ok: true
      contains: "\"token_warnings\": []"
